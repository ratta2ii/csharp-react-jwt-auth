{"version":3,"sources":["reportWebVitals.ts","app/api/agent.ts","app/stores/store.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/common/form/MyTextInput.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/users/LoginForm.tsx","app/layout/NavBar.tsx","features/home/HomePage.tsx","features/errors/TestErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/layout/LoadingComponent.tsx","app/common/modals/ModalContainer.tsx","features/dashboard/DashboardContent.tsx","features/dashboard/MacWindow.tsx","features/dashboard/Dashboard.tsx","features/about/About.tsx","features/users/ProtectedRoute.jsx","app/layout/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","error","data","status","toast","history","push","setServerError","Promise","reject","responseBody","requests","url","get","body","post","agent","Account","current","register","user","login","googleLogin","code","TestAuth","test","userStore","getUser","runInAction","console","log","cred","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","makeAutoObservable","this","getItem","appLoaded","setAppLoaded","reaction","setItem","modal","open","openModal","content","StoreContext","createContext","useStore","useContext","MyTextInput","props","useField","name","field","meta","Form","Field","touched","label","Label","basic","color","ValidationErrors","errors","Message","List","map","err","i","Item","observer","initialValues","displayName","userName","email","password","onSubmit","values","setErrors","catch","validationSchema","Yup","required","handleSubmit","isSubmitting","isValid","dirty","className","autoComplete","Header","as","textAlign","placeholder","type","render","Button","loading","disabled","positive","fluid","style","marginBottom","marginTop","to","onClick","useEffect","Menu","inverted","fixed","Container","NavLink","exact","header","marginRight","fontSize","fontWeight","position","Image","src","image","avatar","spaced","Dropdown","pointing","text","Link","icon","backgroundImage","Segment","vertical","backgroundSize","size","TestErrors","height","Group","widths","baseUrl","primary","NotFound","Icon","Inline","LoadingComponent","Dimmer","active","Loader","Modal","onClose","width","padding","backgroundColor","Content","maxWidth","overflowWrap","lineHeight","res","success","autoClose","closeOnClick","pauseOnHover","draggable","progress","undefined","YosemiteWindow","alert","display","alignItems","fontFamily","MacWindow","href","alt","boxShadow","margin","Component","component","rest","isLoggedIn","pathname","state","from","location","finally","hideProgressBar","path","HomePage","About","Dashboard","ServerError","createBrowserHistory","ReactDOM","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.545801a3.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { history } from '../..';\nimport { GoogleCode, User, UserFormValues } from '../models/user';\nimport { store } from '../stores/store';\n\n// loading indicator\nconst sleep = (delay: number) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay);\n    })\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n});\n\n// Up to this point, the interceptors are reacting to response after call\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\n    return response;\n}, (error: AxiosError) => {\n    const { data, status } = error.response!;\n    switch (status) {\n        case 400:\n            toast.error('Status 400 Bad Request');\n            break;\n        case 401:\n            toast.error('Status 401 Unauthorized');\n            break;\n        case 404:\n            history.push('/not-found');\n            break;\n        case 500:\n            store.commonStore.setServerError(data);\n            toast.error('Status 500 Server Error');\n            history.push('/server-error');\n            break;\n    }\n    return Promise.reject(error);\n});\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Account = {\n    current: () => requests.get<User>(\"/account\"),\n    register: (user: UserFormValues) => requests.post<User>(\"/account/register\", user),\n    login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n    googleLogin: (code: GoogleCode) => requests.post<User>(\"/account/auth/google\", code),\n}\n\nconst TestAuth = {\n    test: () => requests.get<any>(\"/testauth\")\n}\n\nconst agent = {\n    Account,\n    TestAuth\n}\n\nexport default agent;","import { createContext, useContext } from \"react\";\nimport UserStore from \"./userStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\n\ninterface Store {\n    userStore: UserStore;\n    commonStore: CommonStore;\n    modalStore: ModalStore;\n}\n\nexport const store: Store = {\n    userStore: new UserStore(),\n    commonStore: new CommonStore(),\n    modalStore: new ModalStore(),\n}\n\nexport const StoreContext = createContext(store);\n\n// Custom hook\nexport const useStore = () => {\n    return useContext(StoreContext);\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { GoogleCode, User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n    user: User | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    get isLoggedIn() {\n        // \"!!\" is a fancy way to return \"this.user\" as a boolean\n        return !!this.user;\n    }\n\n    getUser = async () => {\n        try {\n            const user = await agent.Account.current();\n            runInAction(() => this.user = user);\n        } catch (error) {\n            console.log({ \"Error in userStore > getUser()\": error });\n            throw error;\n        }\n    }\n\n    register = async (cred: UserFormValues) => {\n        try {\n            const user = await agent.Account.register(cred);\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            history.push(\"/\");\n            // history.push(`/dashboard/user/${user.userName}`);\n            store.modalStore.closeModal();\n        }\n        catch (error) {\n            console.log({ \"Error in userStore > register()\": error });\n            throw error;\n        }\n    }\n\n    login = async (cred: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(cred);\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            history.push(\"/\");\n            // history.push(`/dashboard/user/${user.userName}`);\n            store.modalStore.closeModal();\n        }\n        catch (error) {\n            console.log({ \"Error in userStore > login()\": error });\n            throw error;\n        }\n    }\n\n    googleLogin = async (code: GoogleCode) => {\n        const user = await agent.Account.googleLogin(code);\n        // TODO: There is currently no route in the back-end controller. Add a route in the account controller that accepts the google auth code, verifies the code w/ google, which in turn returns tokens and user profile from google. Create a user on the backend, adding token property userDto, and send userDto back to client. Once here, login user, add token to localStorage, etc. \n        console.log(\"user in googleLogin() response: \", user);\n    };\n\n    logout = () => {\n        store.commonStore.setToken(null);\n        window.localStorage.removeItem(\"jwt\");\n        runInAction(() => this.user = null);\n        history.push(\"/about\");\n    }\n}\n\n/*\n\n? If a \"jwt\" token already exists in localStorage:\n* When the app is first init (App.tsx), it looks for a token in the localStorage. If token exists,\n* getUser() is called, which calls the API on backend, verifies token, then returns the user DTO.\n\n? If a user has to login through entering email and password:\n* User will be created on the server-side, with an access token (stored on userDto), and then sent\n* back to the client. The data from the userDto, including the token, are stored on the client.\n* During this transaction, the token is stored in a (global state), as well as the localStorage.\n* The access token is then added to Authorization Headers on all subsequent server calls in order\n* to access authorized endpoints.\n* The token is also used to retrieve logged in users on client app reloads or return visitors.\n\n*/","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n    token: string | null = window.localStorage.getItem(\"jwt\");\n    error: ServerError | null = null;\n    appLoaded: boolean = false;\n\n    constructor()  {\n        makeAutoObservable(this);\n\n        // NOTE: This \"reaction\" does not run when the store is initialized, but only when \n        // there has been a change to the \"token\" state slice. \n        reaction(\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem(\"jwt\", token);\n                } else {\n                    window.localStorage.removeItem(\"jwt\");\n                }\n            }\n        )\n    }\n\n    setToken = (token: string | null) => {\n        // if (token) window.localStorage.setItem(\"jwt\", token);\n        this.token = token;\n    }\n\n    setServerError = (error: ServerError) => {\n        this.error = error;\n    }\n\n    setAppLoaded = () => {\n            this.appLoaded = true;\n    }\n\n}","import { makeAutoObservable } from \"mobx\";\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n    \n    constructor()  {\n        makeAutoObservable(this);\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n\n}","import React from \"react\";\nimport { useField } from \"formik\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  type?: string;\n  label?: string;\n}\n\nconst MyTextInput = (props: Props) => {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyTextInput;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n    errors: any;\n}\n\nconst ValidationErrors = ({errors}: Props) => {\n\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => (\n                        <Message.Item key={i}>{err}</Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    )\n}\n\nexport default ValidationErrors;","import React from \"react\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nconst RegisterForm = () => {\n  const { userStore } = useStore();\n  const { register } = userStore;\n\n  return (\n    <Formik\n      initialValues={{ displayName: \"\", userName: \"\", email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        register(values).catch((error) =>\n          setErrors({ error: error })\n        )\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        userName: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header as=\"h3\" content=\"Register New Account!\" color=\"teal\" textAlign=\"center\" />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"userName\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <ValidationErrors errors={errors.error} />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            disabled={!isValid || !dirty || isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(RegisterForm);","import React from \"react\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport { Link } from \"react-router-dom\";\nimport RegisterForm from \"./RegisterForm\";\n\nconst LoginForm = () => {\n  const { userStore, modalStore } = useStore();\n  const { login } = userStore;\n  const { openModal } = modalStore;\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        login(values).catch((error) =>\n          setErrors({ error: \"Email or Password did not match!\" })\n        )\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h3\"\n            content=\"C#-React-JWT-Auth Login\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n          <div\n            style={{\n              textAlign: \"center\",\n              marginTop: 20,\n            }}\n          >\n            <Link to=\"#\" onClick={() => openModal(<RegisterForm />)}>\n              Register New Account Here!\n            </Link>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(LoginForm);\n\n//! Material-UI Form below\n// import React, { ChangeEvent, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Button, TextField, Paper, Typography } from \"@material-ui/core\";\n// import { useStore } from \"../../app/stores/store\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import RegisterForm from \"./RegisterForm\";\n\n// const useStyles = makeStyles(theme => ({\n//     button: {\n//         margin: theme.spacing(1),\n//         height: 30,\n//         marginTop: 25,\n//         backgroundColor: \"#21ba45\",\n//         color: \"white\",\n//     },\n//     leftIcon: {\n//         marginRight: theme.spacing(1)\n//     },\n//     rightIcon: {\n//         marginLeft: theme.spacing(1)\n//     },\n//     iconSmall: {\n//         fontSize: 20\n//     },\n//     root: {\n//         padding: theme.spacing(3, 2),\n//         maxWidth: 350,\n//     },\n//     textField: {\n//         margin: \"5px 8px\",\n//         width: 300,\n//     }\n// }));\n\n// interface Props {\n//   formName: string;\n//   formDescription: string;\n// }\n\n// const LoginForm = ({ formName, formDescription }: Props) => {\n//   const classes = useStyles();\n//   const { userStore, modalStore } = useStore();\n//   const { login } = userStore;\n//   const { openModal } = modalStore;\n\n//   const [loginCredentials, setLoginCredentials] = useState<any>({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const handleInput = (\n//     event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n//   ) => {\n//     const { name, value } = event.target;\n//     setLoginCredentials({ ...loginCredentials, [name]: value });\n//   };\n\n//   const handleOnSubmit = (event: any) => {\n//     event.preventDefault();\n//     login(loginCredentials).catch((error) =>\n//         console.log(error)\n//     );\n//   };\n\n//   return (\n//     <div style={{ width: 450, padding: 50, backgroundColor: \"lightgray\", margin: \"200px auto\" }}>\n//       <Paper className={classes.root}>\n//         <Typography variant=\"h5\" component=\"h3\">\n//           Login to your Account\n//         </Typography>\n//         <Typography component=\"p\" style={{ fontSize: 12, margin: 10 }}>\n//           Important: Enter the email used to register this account\n//         </Typography>\n\n//         <form onSubmit={handleOnSubmit}>\n//           <TextField\n//             label=\"Email\"\n//             placeholder=\"Enter your email here\"\n//             name=\"email\"\n//             defaultValue={loginCredentials.username}\n//             onChange={handleInput}\n//             id=\"margin-normal\"\n//             className={classes.textField}\n//             helperText=\"Enter your Email\"\n//             variant=\"filled\"\n//           />\n//           <TextField\n//             label=\"Password\"\n//             id=\"margin-normal\"\n//             name=\"password\"\n//             defaultValue={loginCredentials.password}\n//             placeholder=\"Enter your email here\"\n//             className={classes.textField}\n//             helperText=\"Enter your Password\"\n//             variant=\"outlined\"\n//             onChange={handleInput}\n//           />\n//           <Button\n//             type=\"submit\"\n//             variant=\"contained\"\n//             className={classes.button}\n//           >\n//             Login\n//           </Button>\n//         </form>\n//         <div\n//           style={{\n//             textAlign: \"center\",\n//             marginTop: 15,\n//           }}\n//         >\n//           {/* <Link to=\"/register\">Register New Account Here!</Link> */}\n//           <Link to=\"#\" onClick={() => openModal(<RegisterForm />)} >\n//               Need an account? SignUp HERE\n//           </Link>\n//         </div>\n//       </Paper>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n","import React, { useEffect } from \"react\";\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\nimport { observer } from \"mobx-react-lite\";\nimport LoginForm from \"../../features/users/LoginForm\";\n\nconst NavBar = () => {\n  const { \n      userStore: { user, logout },\n      modalStore: { openModal } \n  } = useStore();\n\n  useEffect(() => {\n  }, [user]);\n\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          Home\n        </Menu.Item>\n        <Menu.Item as={NavLink} to={`/dashboard/user/${user?.userName}`} name=\"Dashboard\" >\n        {!user\n           ? <LockIcon style={{ marginRight: 10, fontSize: 22, color: \"#f0acac\" }} />\n           : <LockOpenIcon style={{ marginRight: 10, fontSize: 22, color: \"#a7dd68\" }} />\n        }\n            Dashboard\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/about\" name=\"About\" />\n        {!user &&\n            <Menu.Item>\n                <Button onClick={() => openModal(<LoginForm />)} color=\"green\" style={{fontWeight: 300}} >\n                    LOGIN\n                </Button>\n            </Menu.Item>\n        }\n        {user &&\n            <Menu.Item position=\"right\">\n            <Image\n                src={user?.image || \"/assets/user3.png\"}\n                avatar\n                spaced=\"right\"\n                />\n            <Dropdown pointing=\"top right\" text={user?.displayName}>\n                <Dropdown.Menu>\n                <Dropdown.Item\n                    // TODO: Add Profile and remove disabled attribute\n                    as={Link}\n                    to={`/dashboard/user/${user?.userName}`}\n                    text=\"My Profile\"\n                    />\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n                </Dropdown.Menu>\n            </Dropdown>\n            </Menu.Item>\n        }\n      </Container>\n    </Menu>\n  );\n};\n\nexport default observer(NavBar);\n","import React, { Fragment, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Header, Segment, Button } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst HomePage = () => {\n  const {\n    userStore: { user },\n  } = useStore();\n\n  useEffect(() => {}, [user]);\n\n  let backgroundImage;\n  !user\n    ? (backgroundImage = \"blue-folder-lock.jpeg\")\n    : (backgroundImage = \"blue-folder-unlock.jpeg\");\n\n  return (\n    <Segment\n      inverted\n      textAlign=\"center\"\n      vertical\n      className=\"masthead\"\n      style={{\n        backgroundImage: `linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.5)),url(\"/assets/${backgroundImage}\")`,\n        backgroundSize: \"cover\",\n      }}\n    >\n      <Container text style={{ marginBottom: 60 }}>\n        <Header as=\"h1\" inverted style={{ marginBottom: 25 }}>\n          {!user ? \"C#-React-JWT-Auth\" : `Welcome ${user.userName}!`}\n        </Header>\n        <Fragment>\n          {!user ? (\n            <Button as={Link} to=\"/about\" size=\"huge\" inverted>\n              Show me the Magic!\n            </Button>\n          ) : (\n            <Button as={Link} to={`/dashboard/user/${user?.userName}`} size=\"huge\" inverted>\n              Go To Dashboard!\n            </Button>\n          )}\n        </Fragment>\n      </Container>\n    </Segment>\n  );\n};\n\nexport default observer(HomePage);\n","import React from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nexport default function TestErrors() {\n    const baseUrl = process.env.REACT_APP_API_URL;\n\n    function handleNotFound() {\n        axios\n            .get(baseUrl + \"buggy/not-found\")\n            .catch((err) => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios\n            .get(baseUrl + \"buggy/bad-request\")\n            .catch((err) => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios\n            .get(baseUrl + \"buggy/server-error\")\n            .catch((err) => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios\n            .get(baseUrl + \"buggy/unauthorised\")\n            .catch((err) => console.log(err.response));\n    }\n\n    return (\n        <>\n            <Header as=\"h1\" content=\"Error Testing:\" />\n            <Segment style={{height: 70}}>\n                <Button.Group widths=\"7\">\n                    <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n                    <Button\n                        onClick={handleBadRequest}\n                        content=\"Bad Request\"\n                        basic\n                        primary\n                    />\n                    <Button\n                        onClick={handleServerError}\n                        content=\"Server Error\"\n                        basic\n                        primary\n                    />\n                    <Button\n                        onClick={handleUnauthorised}\n                        content=\"Unauthorised\"\n                        basic\n                        primary\n                    />\n                </Button.Group>\n            </Segment>\n        </>\n    );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, Icon, Segment } from \"semantic-ui-react\";\n\nconst NotFound = ()  => {\n\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name=\"search\">\n                    We could not find this.\n                </Icon>\n            </Header>\n            <Segment.Inline as={Link} to=\"/errors\" primary>\n                Return to Error Testing\n            </Segment.Inline>\n        </Segment>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Header, Segment, Icon } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n\nconst ServerError = () => {\n\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name=\"server\" style={{marginRight: 30}}>\n                    Server Error\n                </Icon>\n            </Header>\n            <Segment.Inline as={Link} to=\"/errors\" primary>\n                Return to Error Testing\n            </Segment.Inline>\n        </Segment>\n    )\n}\n\nexport default observer(ServerError);","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n    // darkened background\n    inverted?: boolean;\n    content: string;\n}\n\nconst LoadingComponent = ({\n    inverted = true,\n    content = \"Loading...\",\n}: Props) => {\n\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content} />\n        </Dimmer>\n    );\n};\n\nexport default LoadingComponent;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Container, Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nconst ModalContainer = () => {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      style={{width: 450, padding: 50, backgroundColor: \"#d2d2d2\"}}\n      // size=\"mini\"\n    >\n      <Modal.Content>\n        <Container style={{  }}>\n          {modalStore.modal.body}\n        </Container>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default observer(ModalContainer);\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Container } from \"semantic-ui-react\";\nimport agent from \"../../app/api/agent\";\nimport { toast } from \"react-toastify\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst DashboardContent = (props: any) => {\n  const {\n    userStore: { user },\n  } = useStore();\n\n  const handleTestAuthEndpoint = () => {\n    agent.TestAuth.test().then((res) => {\n      toast.success(`${res}`, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    });\n  };\n\n  return (\n    <Container>\n      <h3>Current User:</h3>\n      <ul\n        style={{\n          maxWidth: \"100%\",\n          overflowWrap: \"break-word\",\n          lineHeight: \"1.8rem\",\n        }}\n      >\n        <li>Username: {user?.userName}</li>\n        <li>Display Name: {user?.displayName}</li>\n        <li>Token: {user?.token}</li>\n      </ul>\n      <div style={{ marginTop: 75, marginBottom: 75, textAlign: \"center\" }}>\n        <Button onClick={handleTestAuthEndpoint} color=\"black\" size=\"large\">\n          Test Authorization Endpoint\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default observer(DashboardContent);\n","import React from \"react\";\nimport DashboardContent from \"./DashboardContent\";\nimport \"./MacWindowStyles.css\";\n\nconst YosemiteWindow = () => {\n  const handleUserWarningMessage = () => {\n    alert(\n      \"IMPORTANT: This window is for design purposes only. It does not work as a functioning window.\\n\\nThank you!\"\n    );\n  };\n\n  return (\n    <div className=\"window\">\n      <div className=\"titlebar\">\n        {/* Mac buttons */}\n        <div className=\"buttons\" onClick={handleUserWarningMessage}>\n          <div className=\"close\">\n            <button className=\"closebutton\">x</button>\n          </div>\n          <div className=\"minimize\">\n            <button className=\"minimizebutton\">&ndash;</button>\n          </div>\n          <div className=\"zoom\">\n            <button className=\"zoombutton\">+</button>\n          </div>\n        </div>\n        {/* window title */}\n        User Profile (Mock Window)\n      </div>\n      <div className=\"content\">\n        {/* window content */}\n        <DashboardContent />\n      </div>\n    </div>\n  );\n};\n\nexport default YosemiteWindow;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Container } from \"semantic-ui-react\";\nimport MacWindow from \"./MacWindow\";\n\nconst Dashboard = (props: any) => {\n  return (\n    <Container\n      style={{\n        maxWidth: \"80%\",\n        height: \"94vh\",\n        marginTop: \"-5vh\",\n        display: \"flex\",\n        alignItems: \"center\",\n        lineHeight: \"1.6rem\",\n        fontSize: 16,\n        fontFamily: \"monospace\",\n      }}\n    >\n      <MacWindow />\n    </Container>\n  );\n};\n\nexport default observer(Dashboard);\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Container } from \"semantic-ui-react\";\nimport agent from \"../../app/api/agent\";\nimport { toast } from \"react-toastify\";\n\nconst About = (props: any) => {\n  const handleTestAuthEndpoint = () => {\n    agent.TestAuth.test().then((res) => {\n      toast.success(`${res}`, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    });\n  };\n\n  return (\n    <Container\n      style={{\n        fontSize: 16,\n        fontFamily: \"monospace\",\n        width: \"80%\",\n        marginTop: 130,\n      }}\n    >\n      <h1 style={{ fontWeight: 600, fontSize: 35 }}>\n        Auth Services with JWT's\n      </h1>\n      <h2\n        style={{\n          fontWeight: 600,\n          fontSize: 16,\n          marginTop: 10,\n        }}\n      >\n        C# | .NET5.0 | TypeScript | React\n      </h2>\n      <a href=\"https://securityheaders.com/\">\n        <img\n          src=\"/assets/screenshots/ss-security-rating.png\"\n          alt=\"security rating\"\n          style={{\n            marginBottom: 20,\n            marginTop: 10,\n            width: \"100%\",\n            boxShadow:\n              \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\n          }}\n        />\n      </a>\n      <h3>Description:</h3>\n      <p>\n        The purpose of this application is to demonstrate a working knowledge of\n        authentication, authorization in the context of Json Web Tokens (JWT's),\n        as well as how to make an application more secure through the\n        implementation of security headers. In addition to the Auth services,\n        the project also demonstrates an understanding on how to build a\n        full-stack application, and how to deploy it to a production\n        environment.\n      </p>\n      <h3>Details:</h3>\n      <ul style={{ lineHeight: \"1.6rem\" }}>\n        <li>\n          C#/.NET5.0 back-end API, with a TypeScript/React client front-end\n        </li>\n        <li>Containerized database using docker and Postgres</li>\n        <li>\n          The React client is hosted side-by-side to the back-end API on Heroku\n          (PaaS)\n        </li>\n        <li>\n          The back-end API is serving the React build files from a wwwroot\n          folder (triggered by a post-build event)\n        </li>\n      </ul>\n      <div style={{ margin: \"40px 0 50px\" }}>\n        <Button onClick={handleTestAuthEndpoint} color=\"black\" size=\"large\">\n          Test Authorization Endpoint\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default observer(About);\n","// ! Component is a good model, however, it does fit my situation\n// import { Redirect } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"./LoginForm\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const {\n    userStore: { isLoggedIn },\n    modalStore: { openModal },\n  } = useStore();\n\n  useEffect(() => {}, [isLoggedIn]);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isLoggedIn) {\n          return <Component {...props} />;\n        } else {\n          openModal(<LoginForm />);\n            return (\n              <Redirect\n                to={{\n                  pathname: \"/about\",\n                  state: {\n                    from: props.location,\n                  },\n                }}\n              />\n            );\n        }\n      }}\n    />\n  );\n};\n\nexport default observer(ProtectedRoute);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport TestErrors from \"../../features/errors/TestErrors\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport Dashboard from \"../../features/dashboard/Dashboard\";\nimport About from \"../../features/about/About\";\nimport ProtectedRoute from \"../../features/users/ProtectedRoute\";\n\nfunction App() {\n  const { commonStore, userStore } = useStore();\n  const { getUser } = userStore;\n  const { token, appLoaded, setAppLoaded } = commonStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded());\n    } else {\n      setAppLoaded();\n    }\n  }, [getUser, setAppLoaded, token]);\n\n  if (!appLoaded) return <LoadingComponent content=\"Loading App...\" />;\n\n  return (\n    <Fragment>\n      {/* Pass in both ModalContainer and ToastContainer in high level components */}\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <Route path=\"/about\" component={About} />\n                <ProtectedRoute\n                  exact\n                  path=\"/dashboard/user/:userName\"\n                  component={Dashboard}\n                />\n                <Route path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                {/* This works with \"Switch\" that only allows a single com to render at a time */}\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { createBrowserHistory } from \"history\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <StoreContext.Provider value={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </StoreContext.Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}